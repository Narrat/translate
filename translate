#!/usr/bin/env python3
#
# translate -- Google Translator command line interface.
#
# Copyright (C) 2009 Henri Hakkinen.
# Copyright (c) 2013-2014 Lex Black
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
import re
from http.client import HTTPSConnection
from urllib.parse import quote_plus

# Handle command line options.
if len(sys.argv) < 3:
    print("""Usage: translate FROM TO [WORDS...]
    Translates WORDS from language FROM to language TO.
    Uses Google Translator as the translator backend.
    With no words given it reads from STDIN (^D on newline to move on).
    \nCopyright (C) 2009 Henri Hakkinen.
    Copyright (c) 2013-2014 Lex Black.
    Report bugs at https://github.com/Narrat/translate.git/""")
    sys.exit(1)

FROM  = sys.argv[1]
TO    = sys.argv[2]
WORDS = sys.argv[3:]

# If no words are given while invoking; read from stdin.
if len(WORDS) == 0:
    for line in sys.stdin:
        WORDS += line.split()

# Encode WORDS so non ASCII chars can be passed within an URL
for count in range(0, len(WORDS)):
    WORDS[count] = quote_plus(WORDS[count])

# Construct the message body.
body = "/translate_a/single?client=x&ie=UTF-8&oe=UTF-8&dt=bd&dt=ex&dt=ld&dt=md&dt=qca&dt=rw&dt=rm&dt=ss&dt=t&dt=at&hl={0}&sl={0}&tl={1}&q={2}".format(FROM, TO, WORDS[0])
for w in WORDS[1:]:
    body += "+%s" % (w)

# Connect to translate.google.com and request result.
conn = HTTPSConnection("translate.google.com")
conn.request("GET", body)

resp = conn.getresponse()
if resp.status != 200:
    print("Server responded with error code %d." % (resp.status))
    sys.exit(1)

# Parse the result.
match = re.search("\[\[\[\".*?\"", resp.read().decode('utf-8', 'replace'))
conn.close()
if not match: sys.exit(1)
print(match.group()[4:-1])

# vim:set sts=4 sw=4 et:
